name: Create Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: false
        default: 'warning'
      tags:
        description: 'Test scenario tags'
jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: false

  build_release:
    name: Build Release
    needs: create_release
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            release_suffix: linux.AppImage
          - os: macos-latest
            release_suffix: mac.tar.gz
          - os: windows-latest
            release_suffix: windows.zip
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Linux Build
        if: matrix.os == 'ubuntu-latest'
        run: |
          git fetch --tags
          TAG=$(git rev-list --tags --max-count=1)
          git checkout $TAG
          sudo apt install libsfml-dev
          make appimage release client server package
          mv *.AppImage SurvRoyale-${{ needs.create_release.outputs.tag-name }}-x86_64-linux.AppImage

      - name: Run Mac Build
        if: matrix.os == 'macos-latest'
        run: |
          git fetch --tags
          TAG=$(git rev-list --tags --max-count=1)
          git checkout $TAG
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          brew install --build-bottle surv-royale.rb
          brew bottle surv-royale
          mv *.tar.gz SurvRoyale-${{ needs.create_release.outputs.tag-name }}-x86_64-mac.tar.gz

      - name: Run Windows Build
        if: matrix.os == 'windows-latest'
        run: |
          git fetch --tags
          FOR /F %%j IN ('git rev-list --tags --max-count^=1') DO set TAG=%%j
          git checkout %TAG%
          build-windows.bat
          7z a -tzip SurvRoyale-${{ needs.create_release.outputs.tag-name }}-x86_64-windows.zip build

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.create_release.outputs.tag-name }}
          files: SurvRoyale-${{ needs.create_release.outputs.tag-name }}-x86_64-${{ matrix.release_suffix }}
